scriptencoding utf-8
" vim:set ts=8 sts=2 sw=2 tw=0:
"
" 全環境共通設定 (Terminal Vim, GUI Vim, IdeaVim)
"

"---------------------------------------------------------------------------
" 検索の挙動に関する設定:
"
" 検索時に大文字小文字を無視
set ignorecase
" 大文字小文字の両方が含まれている場合は大文字小文字を区別
set smartcase
" 検索時にファイルの最後まで行ったら最初に戻る
set wrapscan

"---------------------------------------------------------------------------
" 編集に関する設定:
"
" タブをスペースに展開
set expandtab
" タブの画面上での幅
set tabstop=4
" シフト幅
set shiftwidth=4
" ソフトタブストップ（無効化）
set softtabstop=0

" 自動的にインデントする
set autoindent
" バックスペースでインデントや改行を削除できるようにする
set backspace=indent,eol,start
" 括弧入力時に対応する括弧を表示
set showmatch
" コマンドライン補完するときに強化されたものを使う
set wildmenu
" Enhanced command-line completion
set wildmode=longest:full,full
set wildignore=*.o,*.obj,*.pyc,*.swp,*.bak
set completeopt=menu,menuone,noselect
" テキスト挿入中の自動折り返しを日本語に対応させる
set formatoptions+=mM

"---------------------------------------------------------------------------
" 画面表示の設定:
"
" 行番号を非表示（環境ごとに上書き可能）
set nonumber
" ルーラーを表示
set ruler
" 常にステータス行を表示
set laststatus=2
" コマンドラインの高さ
set cmdheight=2
" コマンドをステータス行に表示
set showcmd
" タイトルを表示
set title

"---------------------------------------------------------------------------
" ファイル形式・エンコーディング設定:
"
" プラットフォーム固有のファイル形式設定
if has('win32') || has('win64')
  " Windows固有設定
  set fileformat=dos
  set fileformats=dos,unix
else
  " Unix/macOS/Linux固有設定
  set fileformat=unix
  set fileformats=unix,dos
endif

" ファイルエンコーディング
set fileencoding=utf-8
" ファイルエンコーディングの候補
set fileencodings=utf-8,cp932

"---------------------------------------------------------------------------
" バックアップ・スワップファイル設定:
"
" プラットフォーム固有のディレクトリ設定
if has('win32') || has('win64')
  " Windows固有設定
  let vim_dir = expand('~/vimfiles')
  let tmp_dir = expand('~/vimfiles/tmp')
else
  " Unix/macOS/Linux固有設定
  let vim_dir = expand('~/.vim')
  let tmp_dir = expand('~/.vim/tmp')
endif

" ディレクトリが存在しない場合は作成
if !isdirectory(vim_dir)
  call mkdir(vim_dir, 'p')
endif
if !isdirectory(tmp_dir)
  call mkdir(tmp_dir, 'p')
endif

" スワップファイル・バックアップファイルの保存先
set directory=tmp_dir
set backupdir=tmp_dir
" アンドゥファイルを作成しない
set noundofile

"---------------------------------------------------------------------------
" 特殊文字表示設定:
"
" タブや改行の表示文字設定
set listchars=tab:^\ ,trail:~,eol:$
" デフォルトでは非表示（環境ごとに上書き可能）
set nolist

"---------------------------------------------------------------------------
" 検索ハイライト色の設定:
"
" 検索結果のハイライト（初期設定）
highlight Search guibg=#ffeb3b guifg=#000000 ctermbg=226 ctermfg=16
highlight IncSearch guibg=#ff9800 guifg=#000000 ctermbg=208 ctermfg=16

" カラースキーム変更時の自動色変更
augroup SearchHighlight
  autocmd!
  " カラースキーム読み込み後に検索色を再設定
  autocmd ColorScheme * highlight Search guibg=#ffeb3b guifg=#000000 ctermbg=226 ctermfg=16
  autocmd ColorScheme * highlight IncSearch guibg=#ff9800 guifg=#000000 ctermbg=208 ctermfg=16
augroup END

" 検索を有効化
set hlsearch

"---------------------------------------------------------------------------
" プラグイン管理の読み込み:
"
if filereadable(expand('~/dotfiles/vim/plugins.vim'))
  source ~/dotfiles/vim/plugins.vim
endif

"---------------------------------------------------------------------------
" プラットフォーム固有のランタイムパス設定:
"
" Windows固有のランタイムパス設定
if has('win32') || has('win64')
  " Windows用のランタイムパス設定
  set runtimepath+=~/vimfiles
  set runtimepath+=~/vimfiles/after
  set runtimepath+=~/vimfiles/plugged
endif

"---------------------------------------------------------------------------
" 共通キーマップの読み込み:
"
if filereadable(expand('~/dotfiles/vim/mappings.common'))
  source ~/dotfiles/vim/mappings.common
endif

"---------------------------------------------------------------------------
" ユーザー固有設定の読み込み:
"
" Load user-specific customizations (multiple possible locations)
let local_vim_configs = [
  \ expand('~/.vim/local.vim'),
  \ expand('~/vimfiles/local.vim'),
  \ expand('~/.config/nvim/local.vim'),
  \ expand('~/dotfiles/vim/local.vim')
  \ ]

for local_config in local_vim_configs
  if filereadable(local_config)
    execute 'source ' . local_config
    break
  endif
endfor
